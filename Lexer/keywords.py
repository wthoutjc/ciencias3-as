RESERVED = {
    "abstract": "ABSTRACT",
    "assert": "ASSERT",
    "boolean": "BOOLEAN",
    "break": "BREAK",
    "byte": "BYTE",
    "case": "CASE",
    "catch": "CATCH",
    "char": "CHAR",
    "class": "CLASS",
    "continue": "CONTINUE",
    "default": "DEFAULT",
    "do": "DO",
    "double": "DOUBLE",
    "else": "ELSE",
    "enum": "ENUM",
    "extends": "EXTENDS",
    "final": "FINAL",
    "finally": "FINALLY",
    "float": "FLOAT",
    "for": "FOR",
    "if": "IF",
    "implements": "IMPLEMENTS",
    "import": "IMPORT",
    "instanceof": "INSTANCEOF",
    "int": "INT",
    "interface": "INTERFACE",
    "long": "LONG",
    "native": "NATIVE",
    "new": "NEW",
    "null": "LITERAL",
    "package": "PACKAGE",
    "private": "PRIVATE",
    "protected": "PROTECTED",
    "public": "PUBLIC",
    "return": "RETURN",
    "short": "SHORT",
    "static": "STATIC",
    "strictfp": "STRICTFP",
    "super": "SUPER",
    "switch": "SWITCH",
    "synchronized": "SYNCHRONIZED",
    "this": "THIS",
    "throw": "THROW",
    "throws": "THROWS",
    "transient": "TRANSIENT",
    "try": "TRY",
    "void": "VOID",
    "volatile": "VOLATILE",
    "while": "WHILE",
    "const": "CONST",
    "goto": "GOTO",
    "true": "BOOL",
    "false": "BOOL"
}

OPERATOR = {
    "+": ("ADD", 'Arithmetic Operator'),
    "-": ("SUB", 'Arithmetic Operator'),
    "*": ("MUL", 'Arithmetic Operator'),
    "/": ("DIV", 'Arithmetic Operator'),
    "%": ("MOD",'Arithmetic Operator'),
    "<": ("LT", 'Relational Operator'),
    ">": ("GT", 'Relational Operator'),
    "<=": ("LE", 'Relational Operator'),
    ">=": ("GE", 'Relational Operator'),
    "==": ("EQ", 'Relational Operator'),
    "!=": ("DIF", 'Relational Operator'),
    "=": ("ASG", 'Assignment Operator'),
    "-=": ("AMN", 'Assignment Operator'),
    "*=": ("AML", 'Assignment Operator'),
    "%=": ("AMD", 'Assignment Operator'),
    "/=": ("ADV", 'Assignment Operator'),
    "+=": ("APS", 'Assignment Operator'),
    "&=": ("ABAND", 'Assignment Operator'),
    "|=": ("ABOR", 'Assignment Operator'),
    "^=": ("AXOR", 'Assignment Operator'),
    ">>=": ("ASR", 'Assignment Operator'),
    "<<=": ("ASL", 'Assignment Operator'),
    ">>>=": ("AUSR", 'Assignment Operator'),
    "&": ("BAND", 'Bitwise Operator'),
    "|": ("BOR", 'Bitwise Operator'),
    "^": ("BXOR", 'Bitwise Operator'),
    "~": ("BNOT", 'Bitwise Operator'),
    ">>": ("SR", 'Shift Operator'),
    "<<": ("SL", 'Shift Operator'),
    ">>>": ("USR", 'Shift Operator'),
    "&&": ("LAND", 'Logical Operator'),
    "||": ("LOR", 'Logical Operator'),
    "!": ("LNOT", 'Unary Operator'),
    "++": ("UAD", 'Unary Operator'),
    "--": ("UMI", 'Unary Operator'),
}

PUNCTUATORS = {
    "(": "LP",
    "[": "LSB",
    "{": "LCB",
    ")": "RP",
    "]": "RSB",
    "}": "RCB",
    ";": "SEM",
    ",": "COM",
    ".": "PER",
    ":": "COL"
    }